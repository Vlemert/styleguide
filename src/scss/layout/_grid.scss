$grid-width:          960px !default;
$grid-gutter:         10px !default;
$grid-columns:        12 !default;
$grid-columns-tablet: $grid-columns !default;
$grid-columns-mobile: 3 !default;
$grid-gutter-type:    "margin" !default; // Padding, margin, none
$grid-debug:          false !default;
$grid-debug-color:    #000000 !default;

$layout-direction: "LTR" !default;

@function layout-direction() {
  @return if($layout-direction == "RTL", right, left);
}

@function grid-column-width($col: 1, $columns: $grid-columns) {
  $col-width: unquote(($col * 100 / $columns) + "%");

  @return if($grid-gutter-type == "padding", $col-width, calc(#{$col-width} - #{$grid-gutter}));
}

@mixin column-gutter() {
  @if $grid-gutter-type != "padding" and $grid-gutter-type != "margin" and $grid-gutter-type != "none" {
    $grid-gutter-type: "padding";
  }

  @if $grid-gutter-type == "margin" {
    #{$grid-gutter-type}-right: $grid-gutter / 2;
    #{$grid-gutter-type}-left: $grid-gutter / 2;
  }
}

$columns: (
  'one-twelfth': grid-column-width(1, 12),
  'two-twelfth': grid-column-width(2, 12),
  'three-twelfth': grid-column-width(3, 12),
  'four-twelfth': grid-column-width(4, 12),
  'five-twelfth': grid-column-width(5, 12),
  'six-twelfth': grid-column-width(6, 12),
  'seven-twelfth': grid-column-width(7, 12),
  'eight-twelfth': grid-column-width(8, 12),
  'nine-twelfth': grid-column-width(9, 12),
  'ten-twelfth': grid-column-width(10, 12),
  'eleven-twelfth': grid-column-width(11, 12),
  'one-whole': grid-column-width(1, 1),
  'one-half': grid-column-width(1, 2),
  'one-third': grid-column-width(1, 3),
  'two-third': grid-column-width(2, 3),
  'one-quarter': grid-column-width(1, 4),
  'three-quarter': grid-column-width(3, 4),
  'one-sixth': grid-column-width(1, 6),
  'two-sixth': grid-column-width(2, 6),
  'three-sixth': grid-column-width(3, 6),
  'four-sixth': grid-column-width(4, 6),
  'five-sixth': grid-column-width(5, 6),
) !default;

.container {
  @include clearfix;
  width: $grid-width;
  margin-right: auto;
  margin-left: auto;
}

// Grid system
//
// Create rows with `.columns` to clear the floated columns and outdent the
// padding on `.column`s with negative margin for alignment.

.grid {
  @include clearfix;

  @if $grid-gutter-type == "margin" {
    margin-left: -$grid-gutter / 2;
    margin-right: -$grid-gutter / 2;
  }
}

// Base class for every column (requires a column width from below)
.column {
  @include column-gutter();
  float: layout-direction();
  width: grid-column-width(1, 1);
}

@mixin render-columns() {
  @each $column, $width in $columns {
    .column--#{$column} {
      width: $width;
    }
  }
}
@include render-columns;

// Equal width columns via table sorcery.
.grid--flex {
  margin-left: 0;
  margin-right: 0;

  .column {
    display: table-cell;
    width: 1%;
    //padding-right: $grid-gutter / 2;
    //padding-left: $grid-gutter / 2;
    vertical-align: top;
    float: none;
  }
}

// If debug mode is enabled, make the columns visible
@if $grid-debug {
  .column {
    background: rgba($grid-debug-color, 0.05);
  }
}
