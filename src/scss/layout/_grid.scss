$grid-gutter: 1.5rem !default;
$grid-columns: 12 !default;
$grid-columns-tablet: $grid-columns !default;
$grid-columns-mobile: 3 !default;
// Margin, padding, None
$grid-gutter-type: "margin" !default;
$enable-responsive-grid: true !default; // This should change the large-screen setting to * screen sizes and ignore stacking.
// @TODO FIX ME ^^

$enable-grid-debug: false !default;
$grid-debug-color: rgba(0, 0, 0, 0.05) !default;

@function grid-column-width($col: 1, $columns: $grid-columns) {
  $col-width: unquote(($col * 100 / $columns) + "%");
  @return if($grid-gutter-type == "padding", $col-width, calc(#{$col-width} - #{$grid-gutter}));
}

$columns: (
  "one-twelfth": grid-column-width(1, 12),
  "two-twelfth": grid-column-width(2, 12),
  "three-twelfth": grid-column-width(3, 12),
  "four-twelfth": grid-column-width(4, 12),
  "five-twelfth": grid-column-width(5, 12),
  "seven-twelfth": grid-column-width(7, 12),
  "eight-twelfth": grid-column-width(8, 12),
  "nine-twelfth": grid-column-width(9, 12),
  "ten-twelfth": grid-column-width(10, 12),
  "eleven-twelfth": grid-column-width(11, 12),
  "one-whole": grid-column-width(1, 1),
  "one-half": grid-column-width(1, 2),
  "one-third": grid-column-width(1, 3),
  "two-third": grid-column-width(2, 3),
  "one-quarter": grid-column-width(1, 4),
  "three-quarter": grid-column-width(3, 4),
  "one-fifth": grid-column-width(1, 5),
  "two-fifth": grid-column-width(2, 5),
  "three-fifth": grid-column-width(3, 5),
  "four-fifth": grid-column-width(4, 5),
  "one-sixth": grid-column-width(1, 6),
  "two-sixth": grid-column-width(2, 6),
  "four-sixth": grid-column-width(4, 6),
  "five-sixth": grid-column-width(5, 6),
) !default;

// Grid system
//
// Create rows with `.columns` to clear the floated columns and outdent the
// padding on `.column`s with negative margin for alignment.

@mixin column-gutter() {
  @if $grid-gutter-type != "padding" and $grid-gutter-type != "margin" and $grid-gutter-type != "none" {
    $grid-gutter-type: "padding";
  }

  @if $grid-gutter-type == "margin" {
    #{$grid-gutter-type}-right: $grid-gutter / 2;
    #{$grid-gutter-type}-left: $grid-gutter / 2;
  }
}

.grid {
  @include clearfix;

  @if $grid-gutter-type == "margin" {
    margin-left: -$grid-gutter / 2;
    margin-right: -$grid-gutter / 2;
  }
}

// Base class for every column (requires a column width from below)
.column {
  @include column-gutter();
  float: layout-direction();
  width: grid-column-width(1, 1);
}

@mixin render-columns() {
  @each $column, $width in $columns {
    @include large-screens {
      .column--#{$column} {
        width: $width;
      }
    }

    @include small-screens {
      .column-sm--#{$column} {
        width: $width;
      }
    }

    @include mobile {
      .column-m--#{$column} {
        width: $width;
      }
    }

    @include tablet {
      .column-t--#{$column} {
        width: $width;
      }
    }
  }
}

@include render-columns;

// Equal width columns via table sorcery.
.grid--flex,
.grid--table {
  margin-left: 0;
  margin-right: 0;

  .column {
    display: table-cell;
    width: 1%;
    //padding-right: $grid-gutter / 2;
    //padding-left: $grid-gutter / 2;
    vertical-align: top;
    float: none;
  }
}

// If debug mode is enabled, make the columns visible
@if $enable-grid-debug {
  .column {
    background: $grid-debug-color;
  }
}
